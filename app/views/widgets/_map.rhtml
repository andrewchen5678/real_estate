<% format_mapaddr=format_address(mapaddr) %>
  <script src="http://maps.google.com/maps?file=api&amp;v=2.x&amp;key=<%=GOOGLE_MAP_API_KEY%>" type="text/javascript"></script>

    <script type="text/javascript">

    var map = null;
    var geocoder = null;
    var myPano;
    var mapControl;
    var gmarkers=[];
    var moveListener;
    var dbmarkers=[];
    var singlemarker;

    function initialize() {
      if (GBrowserIsCompatible()) {
        geocoder = new GClientGeocoder();
        myPano = new GStreetviewPanorama(document.getElementById("pano"));
        GEvent.addListener(myPano, "error", handleNoFlash);
        mapControl = new GMapTypeControl();

        map = new GMap2(document.getElementById("map_canvas"));
        map.addControl(mapControl);
        map.addControl(new GLargeMapControl());

        showAddressByID(<%=mapaddr.id%>,$('within').value);

        //moveListener = GEvent.addListener(map, "moveend", function(){updatemapbound(true)});

      }
    }

    function updatemapbound(asyn) {
        var bounds = map.getBounds();
        var sw = bounds.getSouthWest();
        var ne = bounds.getNorthEast();

        var sBound = sw.lat();
        var wBound = sw.lng();
        var nBound = ne.lat();
        var eBound = ne.lng();

        new Ajax.Request('/addresses.js?s='+sBound+'&w='+wBound+'&n='+nBound+'&e='+eBound, {
          method:'get',
          asynchronous:asyn,
          //requestHeaders: {Accept: 'application/json'},
          onSuccess: function(transport){
            //alert(point);
            //document.write('/addresses.js?lat='+point.x+'&lng='+point.y+'&within=15');
            addrlist = transport.responseText.evalJSON(true);
            //document.write(transport.responseText);
            //alert(address);
            clearMarkers();
            for (var key in addrlist) {
              markertemp=new GMarker(new GLatLng(addrlist[key].lat,addrlist[key].lng));
              helpermarker(map,markertemp,addrlist[key].address);
            }
          }
        });

            // AJAX call to the database with the map bounds
    }

    function showAddressByString(address,within){
      //map.clearOverlays();
      if (geocoder) {
        geocoder.getLatLng(
          address,
          function(point) {
            if (!point) {
              alert(address + " not found");
            } else {
              //alert(point);
              if(within>0){
                if(moveListener) GEvent.removeListener(moveListener);
                new Ajax.Request(ajaxstring='/addresses.js?lat='+point.y+'&lng='+point.x+'&within='+within, {
                  method:'get',
                  //requestHeaders: {Accept: 'application/json'},
                  onSuccess: function(transport){
                    //alert(point);
                    //document.write('/addresses.js?lat='+point.x+'&lng='+point.y+'&within=15');
                    addrlist = transport.responseText.evalJSON(true);
                    //document.write(transport.responseText);
                    alert(within);
                    alert(address);

                    helperListAddress(addrlist);
                    focusaddress(address,new GLatLng(point.y,point.x));
                  }
                });
              }else{
                
                updatemapbound(false);
                focusaddress(address,new GLatLng(point.y,point.x));
                alert(moveListener);
                var loadlisten=GEvent.addListener(map, "tilesloaded", function(){
                  moveListener = GEvent.addListener(map, "moveend", function(){
                    updatemapbound(true);
                    GEvent.removeListener(loadlisten);
                  });
                });
                
              }


            }
          }
        );
      }
    }

    function showAddressByID(id,within){
      if(within>0){
        if(moveListener) GEvent.removeListener(moveListener);
        new Ajax.Request('/addresses.js?address_id='+id+'&within='+within, {
          method:'get',
          //requestHeaders: {Accept: 'application/json'},
          onSuccess: function(transport){
            addrlist = transport.responseText.evalJSON(true);
            //alert(addrlist);
            helperListAddress(addrlist);
            focusaddress(addrlist[id].address,new GLatLng(addrlist[id].lat,addrlist[id].lng));
          }
        });
      }else{
        alert('show address by id inside of the range not implemented')
      }
    }

    function helperListAddress(addrlist) {
        clearMarkers();
      //if (geocoder) {
      //  geocoder.getLatLng(
      //    address,
      //    function(point) {
      //      if (!point) {
      //        alert(address + " not found");
      //      } else {
        //fenwayPark = new GLatLng(42.345573,-71.098326);
        //alert(point);
              for (var key in addrlist) {
                var markertemp=new GMarker(new GLatLng(addrlist[key].lat,addrlist[key].lng));
                helpermarker(map,markertemp,addrlist[key].address);
              }
              //for (i=0;i<addrlist.length;i++) {
              //  //alert(addrlist[i].address);
              //  markertemp=new GMarker(new GLatLng(addrlist[i].lat,addrlist[i].lng));
              //  helpermarker(map,markertemp,addrlist[i].address);
              //}
            //}
          //}
        //);
      //}
    }

    function focusaddress(address,point){
      var doListener=new Boolean(moveListener);
        //if(doListener){
        //  GEvent.removeListener(moveListener);
        //}

        var marker = new GMarker(point);
        helpermarker(map,marker,address);
        myPano.setLocationAndPOV(point);
        map.setCenter(point, 13);
        marker.openInfoWindowHtml(address);
        //if(doListener){
        //        moveListener = GEvent.addListener(map, "moveend", function(){
        //         updatemapbound(true);
        //        });
        //}
    }

    function helpermarker(map,marker,text){
        map.addOverlay(marker);
        gmarkers.push(marker);
        GEvent.addListener(marker, 'click', function() {
          // When clicked, open an Info Window
          marker.openInfoWindowHtml(text);
        });
    }

    function clearMarkers(){
      for(i = 0; i < gmarkers.length; i++)
      {
              map.removeOverlay(gmarkers[i]);
      }

    }

    function handleNoFlash(errorCode) {
      if (errorCode == 603) {
        alert("Error: Flash doesn't appear to be supported by your browser");
        return;
      }
    }
    </script>

     <form action="#" id="mapAddressForm" onsubmit="showAddressByString(this.addressfield.value,this.within.value); return false">
      <p>
      <div id="mapinput" style="width: 500px;">
        <br/><input type="text" style="width: 500px;" name="addressfield" id="addressfield" value="<%=h format_mapaddr %>" /></div>
        <input type="submit" value="Go!" />
<%=select_tag("within", options_for_select([['all inside of the range',0],
      ['within 5 miles',5],
    ['within 10 miles',10],
    ['within 20 miles',20],
    ['within 40 miles',40]],
  (params[:within] || 10)),
  :onchange=>'showAddressByString($("addressfield").value,this.value)'
) %>

      </p>
      <div id="map_canvas" style="width: 500px; height: 300px"></div>
      <div id="pano" style="width: 500px; height: 300px; border-style:solid"></div>
    </form>

<script type="text/javascript">
document.observe("dom:loaded", function() {
  initialize();
});

Event.observe(window, 'unload', function(){
  //alert('calling window unload');
  GUnload();
});
    //jQuery(document).ready(function(){
    //    initialize();
    // });
//jQuery(window).unload(function() {
//  GUnload();
//});

</script>